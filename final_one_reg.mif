-- null
DEPTH = 4096;
WIDTH = 32;

ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;

CONTENT
BEGIN
    -- initialize: nop
0000 : 00000000000000000000000000000000;
    -- nop 
0001 : 00000000000000000000000000000000;
    -- addi $r3, $r0, 0
0002 : 00101000110000000000000000000000;
    -- addi $r2, $r0, 0 #start r2 at 0
0003 : 00101000100000000000000000000000;
    -- addi $r20, $r0, 1 #constant to see if wires are asserted high
0004 : 00101101000000000000000000000001;
    -- song1: nop
0005 : 00000000000000000000000000000000;
    -- bne $r30, $r20, song2   #play song 2 if r8 is high
0006 : 00010111101010000000000000000001;
    -- addi $r2, $r0, 30 #location in memory of song 2
0007 : 00101000100000000000000000011110;
    -- song2: nop
0008 : 00000000000000000000000000000000;
    -- bne $r29, $r20, continue
0009 : 00010111011010000000000000000001;
    -- addi $r2, $r0, 80
0010 : 00101000100000000000000001010000;
    -- continue: nop
0011 : 00000000000000000000000000000000;
    -- lw $r5, 0($r2) #number of notes in the song
0012 : 01000001010001000000000000000000;
    -- lw $r3, 1($r2) #r2 is a mem counter, r3 the first of 3 notes
0013 : 01000000110001000000000000000001;
    -- addi $r2, $r2, 2
0014 : 00101000100001000000000000000010;
    -- check_reg_3: nop
0015 : 00000000000000000000000000000000;
    -- bne $r20, $r1, skip #if r1 is not high, don't need a new note, so don't load
0016 : 00010101000000100000000000000100;
    -- nop
0017 : 00000000000000000000000000000000;
    -- lw $r3, 0($r2)
0018 : 01000000110001000000000000000000;
    -- addi $r1, $r0, 0
0019 : 00101000010000000000000000000000;
    -- addi $r2, $r2, 1
0020 : 00101000100001000000000000000001;
    -- skip: nop
0021 : 00000000000000000000000000000000;
    -- nop
0022 : 00000000000000000000000000000000;
    -- blt $r5, $r2, initialize  # if the r2 counter is greater than the number of notes, branch 
0023 : 00110001010001011111111111101000;
    -- j check_reg_3
0024 : 00001000000000000000000000001111;
[0025 .. 4095] : 00000000000000000000000000000000;
END;
